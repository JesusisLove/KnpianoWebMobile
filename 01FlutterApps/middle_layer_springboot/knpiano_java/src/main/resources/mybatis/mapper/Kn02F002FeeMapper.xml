<?xml version="1.0" encoding="UTF-8" ?>
<!--
关于Mybatis的SQL文件映射该怎么写，我们要参照Mybatis的官方文档，官方文档都托管到了GitHub下
我们就从GitHub网站去搜索MyBatis的相关资料
配置的参照例子
https://mybatis.org/mybatis-3/getting-started.html

-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liu.springboot04web.mapper.Kn02F002FeeMapper">
    <select id= "getInfoList" resultType="com.liu.springboot04web.bean.Kn02F002FeeBean">
        select * from v_info_lesson_fee_connect_lsn order by stu_name,lsn_month
    </select>

    <select id= "getInfoById" resultType="com.liu.springboot04web.bean.Kn02F002FeeBean">
        select * from v_info_lesson_fee_connect_lsn
        where lsn_fee_id = #{lsnFeeId}
          and lesson_id = #{lessonId}
    </select>

    <!-- 按月结算课程且是计划课的场合，lsn_fee_id和lesson_id是一对多的处理,通过科目和月份取得计划课时用的lsn_fee_id -->
    <select id= "checkScheLsnCurrentMonth" resultType="com.liu.springboot04web.bean.Kn02F002FeeBean">
        select * from v_info_lesson_fee_connect_lsn
        where stu_id = #{stuId}
          and subject_id = #{subjectId}
          and lesson_type = #{lessonType}
          and lsn_month = #{lsnMonth}
        <!-- limit 1 -->
    </select>

    <!-- 后台维护用：从学生课程管理表视图中取得在课学生正在上的科目，在课程费用管理的新规画面实现学生与科目的下拉列表框的联动：科目信息取决于选择的学生 -->
    <select id="getLatestSubjectList" resultType="com.liu.springboot04web.bean.Kn02F002FeeBean">
        SELECT * FROM v_info_lesson order by stu_name
    </select>

    <select id="searchLsnFee" resultType="com.liu.springboot04web.bean.Kn02F002FeeBean">
        SELECT *
        FROM v_info_lesson_fee_connect_lsn
        <where>
            <foreach item="value" index="key" collection="params">
                <if test="value != null and value != ''">
                    AND ${key} like CONCAT('%', #{value}, '%')
                </if>
            </foreach>
        </where>
        order by stu_name, lsn_month desc, lsn_fee_id desc, subject_id, subject_sub_id desc, lesson_type
    </select> 

    <!-- 手机前端用：从学生课程管理表视图中取得在课学生正在上的课程费用 -->
    <select id="getStuFeeListByYear" resultType="com.liu.springboot04web.bean.Kn02F004FeePaid4MobileBean">
        select   stu_id
                ,lsn_pay_id
                ,lsn_fee_id
                ,subject_id
                ,subject_name
                ,subject_sub_name
                ,pay_style,lesson_type
                ,lsn_count
                ,lsn_fee
                ,lsn_month
                ,own_flg
            from v_info_lesson_sum_fee_unpaid_yet
            where stu_id = #{stuId}
            and lsn_month like CONCAT('%', #{year}, '%')
        union all
        select   stu_id
                ,lsn_pay_id
                ,lsn_fee_id
                ,subject_id
                ,subject_name
                ,subject_sub_name
                ,pay_style,lesson_type
                ,lsn_count
                ,lsn_fee
                ,lsn_month
                ,own_flg
            from v_info_lesson_sum_fee_pay_over
            where stu_id = #{stuId}
            and lsn_month like CONCAT('%', #{year}, '%')
        order by lsn_month, subject_id;
    </select>

    <update id="updateInfo">
        update t_info_lesson_fee
        <set>
            <!-- 检查每个字段是否为空，只更新不为空的字段 -->
            <if test="lsnFeeId != null">lsn_fee_id = #{lsnFeeId},</if>
            <if test="lessonId != null"> lesson_id = #{lessonId},</if>
            <if test="payStyle != null"> pay_style = #{payStyle},</if>
            <if test="lsnFee != null">     lsn_fee = #{lsnFee},</if>
            <if test="lsnMonth != null"> lsn_month = #{lsnMonth},</if>
            <if test="ownFlg != null">     own_flg = #{ownFlg},</if>
            <if test="delFlg != null">     del_flg = #{delFlg},</if>
        </set>
        where lsn_fee_id = #{lsnFeeId} 
          and lesson_id  = #{lessonId}
    </update>    

    <!-- 課費未精算模块里，点击【学費精算】ボタン、精算画面にての【保存】ボタン押下、 own_flgの値を０から１に変更する処理-->
    <update id="updateOwnFlg">
        update t_info_lesson_fee set
            own_flg = #{ownFlg}
        where lsn_fee_id = #{lsnFeeId}
    </update>

    <insert id="insertInfo" keyColumn="lesson_id">
        insert into t_info_lesson_fee (
            lsn_fee_id,
            lesson_id,
            pay_style,
            lsn_fee,
            lsn_month,
            own_flg
            ) values (
            #{lsnFeeId},
            #{lessonId},
            #{payStyle},
            #{lsnFee},
            #{lsnMonth},
            #{ownFlg}
        )
    </insert>

    <delete id="deleteInfo">
        delete from t_info_lesson_fee where lsn_fee_id = #{lsnFeeId}
                                        and lesson_id = #{lessonId}
    </delete>

    <select id="getNextSequence" parameterType="map" statementType="CALLABLE">
          {
              #{parm_out,mode=OUT,jdbcType=INTEGER} = call nextval(#{parm_in,mode=IN})
          }
    </select>
</mapper>