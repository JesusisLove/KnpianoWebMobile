<?xml version="1.0" encoding="UTF-8" ?>
<!--
关于Mybatis的SQL文件映射该怎么写，我们要参照Mybatis的官方文档，官方文档都托管到了GitHub下
我们就从GitHub网站去搜索MyBatis的相关资料
配置的参照例子
https://mybatis.org/mybatis-3/getting-started.html

-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liu.springboot04web.mapper.Kn02F003AdvcLsnFeePayMapper">

    <select id="getAdvcFeePayStuInfo" resultType="com.liu.springboot04web.bean.Kn02F003AdvcLsnFeePayBean">
        select stu_id, stu_name from t_mst_student 
        where del_flg = 0
        order by stu_name;
    </select>


    <!-- 获得该生要预支付学费的课程信息 -->
    <select id="getAdvcFeePayLsnInfo" statementType="CALLABLE" resultType="com.liu.springboot04web.bean.Kn02F003AdvcLsnFeePayBean">
        {call sp_get_advance_pay_subjects_and_lsnschedual_info (
            #{stuId,        mode=IN, jdbcType=VARCHAR},
            #{yearMonth,    mode=IN, jdbcType=VARCHAR}
        )}
    </select>

    <!-- 检查课程Id，课费Id，支付Id 在课费预支付表里是否存在 -->
    <select id="getAdvcFeePaidyInfoByIds" resultType="com.liu.springboot04web.bean.Kn02F003AdvcLsnFeePayBean">
        select * from t_info_lsn_fee_advc_pay
        <where>
            <if test="lessonId != null and lessonId != ''">
                AND lesson_id = #{lessonId}
            </if>
            <if test="lsnFeeId != null and lsnFeeId != ''">
                AND lsn_fee_id = #{lsnFeeId}
            </if>
            <if test="lsnPayId != null and lsnPayId != ''">
                AND lsn_pay_id = #{lsnPayId}
            </if>
        </where>
    </select>

    <select id="getAdvcFeePaidInfoByCondition" resultType="com.liu.springboot04web.bean.Kn02F003AdvcLsnFeePayBean">
        SELECT
            advc.lesson_id,
            advc.lsn_fee_id,
            advc.lsn_pay_id,
            lsn.stu_id,
            lsn.stu_name,
            lsn.subject_id,
            lsn.subject_name,
            lsn.subject_sub_id,
            lsn.subject_sub_name,
            lsn.schedual_date,
            pay.lsn_pay,
            pay.bank_id,
            bnk.bank_Name,
            advc.advc_flg
        FROM
            v_info_lesson lsn
        INNER JOIN 
            t_info_lsn_fee_advc_pay advc ON lsn.lesson_id = advc.lesson_id
        INNER JOIN
            t_info_lesson_pay pay ON pay.lsn_pay_id = advc.lsn_pay_id
                                AND advc.lsn_fee_id = pay.lsn_fee_id 
        INNER JOIN
            t_mst_bank bnk ON pay.bank_id = bnk.bank_id
        <where>
            <if test="stuId != null and stuId != ''">
                AND stu_id = #{stuId}
            </if>
            <if test="yearMonth != null and yearMonth != ''">
                AND substring(schedual_date,1,7) = #{yearMonth}
            </if>
            <if test="year != null and year != ''">
                AND substring(schedual_date,1,4) = #{year}
            </if>
        </where>
        ORDER BY schedual_date DESC
    </select>
    
    <!-- 课程签到 advc_flg:0->1变更 / 撤销 advc_flg:1->0变更 -->
    <update id="updateInfo">
        update t_info_lsn_fee_advc_pay set
               advc_flg = #{advcFlg}
         where lesson_id = #{lessonId}
         LIMIT 1
      </update>

    <!-- 获得该生要预支付学费的课程信息 -->
    <select id="executeAdvcLsnFeePay" statementType="CALLABLE">
        {call sp_execute_advc_lsn_fee_pay(
            #{stuId,                    mode=IN, jdbcType=VARCHAR},
            #{subjectId,                mode=IN, jdbcType=VARCHAR},
            #{subjectSubId,             mode=IN, jdbcType=VARCHAR},
            #{lessonType,               mode=IN, jdbcType=INTEGER},
            #{schedualType,             mode=IN, jdbcType=INTEGER},
            #{minutesPerLsn,            mode=IN, jdbcType=INTEGER},
            #{subjectPrice,             mode=IN, jdbcType=DECIMAL},
            #{schedualDate,             mode=IN, jdbcType=TIMESTAMP},
            #{bankId,                   mode=IN, jdbcType=VARCHAR},
            #{lsnSeqCode,               mode=IN, jdbcType=VARCHAR},
            #{feeSeqCode,               mode=IN, jdbcType=VARCHAR},
            #{paySeqCode,               mode=IN, jdbcType=VARCHAR},
            #{paramMap.result,          mode=OUT, jdbcType=INTEGER}
        )}
    </select>

</mapper>