<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liu.springboot04web.dao.KnErrorDataWatchDao">

    <!-- 查看每个学生在同一科目（如钢琴）下，同一个月内是否有多个不同的子科目（如钢琴5级、钢琴6级）
     指定年度里，统计各个月里有没有不同的子科目出现。（原则上一个月内是不可以出现两个不同的子科目的。
     因为是按月收费，所以一个月内不能有两个不同价格的科目出现） -->
    <select id= "getErrLsnDataList" resultType="com.liu.springboot04web.bean.Kn01L002LsnBean">
        WITH watchLsnSubject as 
        (
            SELECT 
                stu_id, 
                stu_name, 
                subject_id, 
                subject_name,
                CASE 
                    WHEN extra_to_dur_date IS NOT NULL THEN left(extra_to_dur_date,7)
                    ELSE left(schedual_date,7) 
                END as lsn_month,
                COUNT(DISTINCT subject_sub_id) as sub_subject_count
            FROM v_info_lesson
            WHERE left(schedual_date,4) = #{year}
            OR left(lsn_adjusted_date,4) = #{year}
            OR left(extra_to_dur_date,4) = #{year}
            AND scanQR_date is not null
            GROUP BY 
                stu_id, 
                stu_name, 
                subject_id, 
                subject_name,
                CASE 
                    WHEN extra_to_dur_date IS NOT NULL THEN left(extra_to_dur_date,7)
                    ELSE left(schedual_date,7) 
                END
            -- 表示有2个以上的不同的子科目出现
            HAVING COUNT(DISTINCT subject_sub_id) > 1
        )
        SELECT 
            a.stu_id, 
            a.stu_name, 
            a.subject_id, 
            a.subject_name,
            a.lsn_month,
            a.sub_subject_count,
            GROUP_CONCAT(DISTINCT b.subject_sub_name) as subject_sub_name
        FROM 
            watchLsnSubject a
        JOIN v_info_lesson b ON 
            a.stu_id = b.stu_id AND 
            a.subject_id = b.subject_id AND
            CASE 
                WHEN b.extra_to_dur_date IS NOT NULL THEN left(b.extra_to_dur_date,7)
                ELSE left(b.schedual_date,7) 
            END = a.lsn_month
        GROUP BY 
            a.stu_id, 
            a.stu_name, 
            a.subject_id, 
            a.subject_name,
            a.lsn_month,
            a.sub_subject_count;
    </select>

    <!-- 查看每个学生在同一科目（如钢琴）下，同一个月内是否有多个不同的子科目（如钢琴5级、钢琴6级）并且也把这个错误数据所在的那一组数据都取出来看看 -->
    <select id= "getErrLsnGroupDataList" resultType="com.liu.springboot04web.bean.Kn01L002LsnBean">
        SELECT lsn.*, clsn.subject_price FROM v_info_lesson lsn
        inner join
        v_info_lesson_fee_connect_lsn_and_extraToScheDataCorrectBefore clsn on lsn.lesson_id = clsn.lesson_id
        WHERE lsn.lesson_id IN (
            <!-- 指定年度里，统计各个月里有没有不同的子科目出现。（原则上一个月内是不可以出现两个不同的子科目的。因为是按月收费，所以一个月内不能有两个不同价格的科目出现） -->
            WITH watchLsnSubject as (
                SELECT 
                    stu_id, 
                    stu_name, 
                    subject_id, 
                    subject_name,
                    CASE 
                        WHEN extra_to_dur_date IS NOT NULL THEN left(extra_to_dur_date,7)
                        ELSE left(schedual_date,7) 
                    END as lsn_month,
                    COUNT(DISTINCT subject_sub_id) as sub_subject_count
                FROM v_info_lesson
                WHERE YEAR(schedual_date) = YEAR(NOW()) 
                   OR YEAR(lsn_adjusted_date) = YEAR(NOW()) 
                   OR YEAR(extra_to_dur_date) = YEAR(NOW())
                    AND scanQR_date is not null -- 已上完课
                GROUP BY 
                    stu_id, 
                    stu_name, 
                    subject_id, 
                    subject_name,
                    CASE 
                        WHEN extra_to_dur_date IS NOT NULL THEN left(extra_to_dur_date,7)
                        ELSE left(schedual_date,7) 
                    END
                -- 表示有2个以上的不同的子科目出现
                HAVING COUNT(DISTINCT subject_sub_id) > 1 
            )
            SELECT DISTINCT b.lesson_id
            FROM watchLsnSubject a
            JOIN v_info_lesson b ON 
                a.stu_id = b.stu_id AND 
                a.subject_id = b.subject_id AND
                CASE 
                    WHEN b.extra_to_dur_date IS NOT NULL THEN left(b.extra_to_dur_date,7)
                    ELSE left(b.schedual_date,7) 
                END = a.lsn_month
        ) 
        AND scanQR_date is not null
    </select>

    <!-- 后台Web端，监视支付完了的支付账单，监视课费（lsn_fee）和支付（lsn_pay）不一致的支付记录 -->
    <select id= "getErrFeeDataList" resultType="com.liu.springboot04web.bean.Kn02F004PayBean">
        with WatchData AS (
            select paid.stu_id,stu_name,subject_id,subject_name,subject_sub_id,subject_sub_name, paid.lsn_fee_id, paid.lsn_pay_id, 
                pay_style, lesson_type ,pay_month, 
                sum(lsn_count) as lsn_count,
                sum(lsn_fee)as lsn_fee, 
                sum(lsn_pay) as lsn_pay
            from v_info_lesson_pay_over paid 
            group by paid.lsn_pay_id, paid.lsn_fee_id,paid.stu_id,stu_name,subject_id,subject_name,subject_sub_id,subject_sub_name, 
                    pay_style, lesson_type ,pay_month
        )
        select * from WatchData where lsn_fee != lsn_pay
        order by stu_id,pay_month
    </select>
</mapper>